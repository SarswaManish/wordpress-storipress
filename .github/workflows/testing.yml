name: Testing

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '**'
    paths:
      - '**.php'
      - 'composer.*'
      - '.github/workflows/testing.yml'
  pull_request:
    paths:
      - '**.php'
      - 'composer.*'
      - '.github/workflows/testing.yml'

jobs:
  testing:
    name: PHP ${{ matrix.php }}, Wordpress ${{ matrix.wordpress }}, DB ${{ matrix.db }}, PHPUnit ${{ matrix.phpunit }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        php: [ '8.0', '7.4', '7.3', '7.2' ]
        wordpress: [ '6.0.2', '5.9.4', '5.8.5', '5.7.7', '5.6.9', '5.5.10', '5.4.11', '5.3.13', '5.2.16', '5.1.14', '5.0.17' ]
        db: [ 'mariadb:10.9.2' ]
        exclude:
          - { php: '7.4', wordpress: '5.0.17' }
          - { php: '7.4', wordpress: '5.1.14' }
          - { php: '7.4', wordpress: '5.2.16' }
          - { php: '8.0', wordpress: '5.0.17' }
          - { php: '8.0', wordpress: '5.1.14' }
          - { php: '8.0', wordpress: '5.2.16' }
          - { php: '8.0', wordpress: '5.3.13' }
          - { php: '8.0', wordpress: '5.4.11' }
          - { php: '8.0', wordpress: '5.5.10' }
          - { php: '8.0', wordpress: '5.6.9' }
          - { php: '8.0', wordpress: '5.7.7' }
          - { php: '8.0', wordpress: '5.8.5' }
        include:
          - { php: '7.2', wordpress: '6.0.2', phpunit: '8.5.30' }
          - { php: '7.3', wordpress: '6.0.2', phpunit: '9.5.20' }
          - { php: '7.4', wordpress: '6.0.2', phpunit: '9.5.20' }
          - { php: '8.0', wordpress: '6.0.2', phpunit: '9.5.20' }
          - { php: '7.2', wordpress: '5.9.4', phpunit: '8.5.30' }
          - { php: '7.3', wordpress: '5.9.4', phpunit: '9.5.20' }
          - { php: '7.4', wordpress: '5.9.4', phpunit: '9.5.20' }
          - { php: '8.0', wordpress: '5.9.4', phpunit: '9.5.20' }
          - { wordpress: '5.8.5', phpunit: '7.5.20' }
          - { wordpress: '5.7.7', phpunit: '7.5.20' }
          - { wordpress: '5.6.9', phpunit: '7.5.20' }
          - { wordpress: '5.5.10', phpunit: '7.5.20' }
          - { wordpress: '5.4.11', phpunit: '7.5.20' }
          - { wordpress: '5.3.13', phpunit: '7.5.20' }
          - { wordpress: '5.2.16', phpunit: '7.5.20' }
          - { wordpress: '5.1.14', phpunit: '7.5.20' }
          - { wordpress: '5.0.17', phpunit: '6.5.14' }

    services:
      mysql:
        image: ${{ matrix.db }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP, Tools and Extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}

      - name: Set ergebnis/composer-normalize:~2.19.0 to Laravel 7.3 and older versions
        if: ${{ '7.3' >= matrix.php }}
        run: composer require ergebnis/composer-normalize:~2.19.0 --dev --no-interaction --no-progress --no-update

      - name: Set PHPUnit to specific version
        run: composer require phpunit/phpunit:~${{ matrix.phpunit }} --dev --no-interaction --no-progress --no-update

      - name: Install dependencies
        run: composer update --with-all-dependencies --no-interaction --no-progress

      - name: Check runtime dependencies
        run: composer check-platform-reqs

      - name: Run Composer Validate
        run: composer validate --strict

      - name: Run Composer Normalize
        run: composer normalize --dry-run

      - name: Run coding style checker
        run: ./vendor/bin/phpcs -v --standard=WordPress -- *.php

      - name: Install WP Tests
        run: bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 ${{ matrix.wordpress }}

      - name: phpunit tests
        run: ./vendor/bin/phpunit
